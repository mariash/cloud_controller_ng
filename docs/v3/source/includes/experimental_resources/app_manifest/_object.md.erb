The app manifest is a method for applying bulk configuration to an application and its underlying processes.
### The app manifest specification

```
Example Manifest
```

```yaml
---
applications:
- buildpack: ruby_buildpack
  env:
    VAR1: value1
    VAR2: value2
  routes:
  - route: route.example.com
  - route: another-route.example.com
  services:
  - my-service1
  - my-service2
  stack: cflinuxfs2

  processes:
  - type: web
    command: start-web.sh
    disk_quota: 512M
    health-check-http-endpoint: /healthcheck
    health-check-type: http
    instances: 3
    memory: 500M
    timeout: 10
  - type: worker
    command: start-worker.sh
    disk_quota: 1G
    health-check-type: process
    instances: 2
    memory: 256M
    timeout: 15
```

#### App-level configuration
This configuration is specified at the top-level and applies to all of the app's processes.

Field | Description
---- | -----------
**buildpack**  | a) Blank OR `default` OR `null` will automatically select the appropriate default buildpack according to the coding language. <br>b) A URL pointing to a buildpack. <br>c) Name of an installed buildpack. <br>DEPRECATED in favor of the `buildpacks` field below.
**buildpacks**  | Must be an Array. <br>a) An empty array, which will automatically select the appropriate default buildpack according to the coding language. <br>b) An array of one or more URLs pointing to buildpacks. <br>c) An array of one or more installed buildpack names. <br>Replaces the legacy `buildpack` field.
**env** | A key-value hash of environment variables to be used for the app when running.
**no-route** | Boolean value. Removes the app's routes if `true`; ignored if `false`. Cannot be used in conjunction with the `routes` attribute when set to `true`.
**processes** | List of configuration for individual process types. See [_Process-level configuration_](#process-level-configuration).
**random-route** | Boolean value. Creates a random route for the app if `true`; ignored if `false`, if `routes` is specified, if the app already has routes, or if `no-route` is specified.
**routes** | An array of route hashes declaring HTTP and TCP routes to be mapped to the app. Each route is created if it does not already exist. Example route hash entry: `- route: www.example.com/path`
**services** | An array of service-instance names to bind to the app.
**stack** | The root filesystem to use with the buildpack, for example `cflinuxfs2`.


#### Process-level configuration
This configuration is for the individual process. Each process is created if it does not already exist.

> **Note:** With the exception of "type", process-level fields can also be provided at the top-level and will apply to the "web" process only. <br/><br/> If there is a process with "type: web" defined in the processes section, then all top level process configuration will be ignored.

Field | Description
---- | -----------
**type** | **(Required)** Process type. The identifier for the processes to be configured.
**command** | The command used to start the process. This overrides start commands from [Procfiles](#procfiles) and buildpacks.
**disk_quota** | The disk limit for all instances of the web process. <br>This attribute requires a unit of measurement: `B`, `K`, `KB`, `M`, `MB`, `G`, `GB`, `T`, or `TB` in upper case or lower case.
**health-check-http-endpoint** | Endpoint called to determine if the app is healthy.
**health-check-type** | Type of health check to perform. `none` is deprecated and an alias to `process`.
**instances** | The number of instances to run.
**memory** | The memory limit for all instances of the web process. <br>This attribute requires a unit of measurement: `B`, `K`, `KB`, `M`, `MB`, `G`, `GB`, `T`, or `TB` in upper case or lower case.
**timeout** | Time in seconds at which the health-check will report failure.
